Terraform Notes

Infrastructure as Code (IAC) types:
1. Configuration managment:
- Ansible, Puppet, Saltstack
- Designed to install and manage Software
- Mainstains standard structure
- Version control
- Idempotent - run a code multiplate times and will only make changes to defined state
2. Server Templating
- Docker, Packer, Vagrant
- Pre Installed Software and Dependencies
- Virtual Machine or Docker Images
- Immutable Infrastructure
3. Provisioning Tools:
- Terraform, CloudFormation
- Deploy Immutable Infrastructure Resources
- Srevers, Databases, Network Components etc.
- Multiple Providers

Terraform uses HashiCorp Configuration Language (HCL) - Declarative Language
and in .tf file extention
- Declarative
- Resource - a file that terraform manages
- A state is a blueprint for Infrastructure

Instalation:
- single binary
wget https://releases.hashicorp.com/terraform/0.13.0/terraform_0.13.0_linux_amd64.zip
uznip terraform_0.13.0_linux_amd64.zip
mv terraform /usr/local/bin
terraform version
- single file

=================================
HCL Basics: (added file main.tf) 

<block> <parameters> {
    key1 = value1
    key2 = value2
}

<block> - contains a set of arguments in a key value file format

Writing terraform workflow consists of four steps:
1. Write the configuration file
2. Run the terraform init command
3. Review the extention plan using the terraform plan command 
(+ symbols mean this will be created)
4. Apply changes with terraform apply command
Running cat command will see if the file was created
Running terraform show command will show us the congiguration

terraform destroy - shows execution plan and destroys while confirmed

=====================
Terraform Providers:

terraform innit - terraform downloads and installs plugins for Provider

  File Name    |                       Purpose
main.tf        | Main configuration file contatining resource definition
varaibles.tf   | Contains variable declaration
outputs.tf     | Contains outputs from Resources
provider.tf    | Contains provider definition

Created file variables.tf to support main.tf
Notes on variables in that file with examples













